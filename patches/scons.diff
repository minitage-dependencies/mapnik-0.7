Index: SConstruct
===================================================================
--- SConstruct	(r√©vision 2615)
+++ SConstruct	(copie de travail)
@@ -625,6 +625,11 @@
 
     # note: must call normpath to strip trailing slash otherwise dirname
     # does not remove 'lib' and 'include'
+    for prefix in env['BOOST_INCLUDES'].split()+env['BOOST_LIBS'].split():
+        fp = os.path.abspath(os.path.dirname(os.path.normpath(prefix)))
+        if not fp in prefixes:
+            prefixes.insert(0,fp)
+                      
     prefixes.insert(0,os.path.dirname(os.path.normpath(env['BOOST_INCLUDES'])))
     prefixes.insert(0,os.path.dirname(os.path.normpath(env['BOOST_LIBS'])))
     for searchDir in prefixes:
@@ -877,6 +882,11 @@
     
     # set any custom cxxflags to come first
     env.Append(CXXFLAGS = env['CUSTOM_CXXFLAGS'])
+    env.Append(CFLAGS   = os.environ.get('CFLAGS'))
+    env.Append(CPPFLAGS   = os.environ.get('CFLAGS'))
+    env.Append(CXXFLAGS   = os.environ.get('CFLAGS'))
+    env.Append(LDFLAGS  = os.environ.get('LDFLAGS')) 
+    env.Append(LINKFLAGS  = os.environ.get('LDFLAGS')) 
     
     # Solaris & Sun Studio settings (the `SUNCC` flag will only be
     # set if the `CXX` option begins with `CC`)
@@ -899,9 +909,10 @@
     for required in ('PNG', 'JPEG', 'TIFF','PROJ','ICU'):
         inc_path = env['%s_INCLUDES' % required]
         lib_path = env['%s_LIBS' % required]
-        env.AppendUnique(CPPPATH = inc_path)
-        env.AppendUnique(LIBPATH = lib_path)
+        env.AppendUnique(CPPPATH = inc_path.split())
+        env.AppendUnique(LIBPATH = lib_path.split()) 
 
+
     conf.parse_config('FREETYPE_CONFIG')
 
     if env['XMLPARSER'] == 'tinyxml':
